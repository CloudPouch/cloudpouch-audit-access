Resources:
  AuditPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: cloudpouch-audit-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: iam:CreateServiceLinkedRole
            Resource: arn:aws:iam::*:role/aws-service-role/compute-optimizer.amazonaws.com/AWSServiceRoleForComputeOptimizer*
            Condition:
              StringLike:
                iam:AWSServiceName: compute-optimizer.amazonaws.com
          
          - Effect: Allow
            Action: iam:PutRolePolicy
            Resource: arn:aws:iam::*:role/aws-service-role/compute-optimizer.amazonaws.com/AWSServiceRoleForComputeOptimizer
          
          - Effect: Allow
            Action:
              - apigateway:Get*
              - dynamodb:ListTables
              - servicediscovery:List*
              - cloudfront:Get*
              - ce:GetCostAndUsage
              - ce:GetReservationPurchaseRecommendation
              - cloudwatch:ListMetrics
              - pricing:GetProducts
              - ce:ListSavingsPlansPurchaseRecommendationGeneration
              - elasticloadbalancing:DescribeLoadBalancers
              - billing:ListBillingViews
              - ce:GetReservationUtilization
              - dynamodb:DescribeTable
              - ce:GetAnomalySubscriptions
              - cloudwatch:ListDashboards
              - cloudwatch:ListTagsForResource
              - rds:DescribeDBInstances
              - aws-portal:View*
              - ce:GetReservationCoverage
              - ce:GetAnomalyMonitors
              - compute-optimizer:*EnrollmentStatus
              - ce:DescribeCostCategoryDefinition
              - ce:GetRightsizingRecommendation
              - batch:Describe*
              - pricing:DescribeServices
              - logs:DescribeLogGroups
              - application-autoscaling:DescribeScalableTargets
              - elasticfilesystem:DescribeAccessPoints
              - ce:GetAnomalies
              - cloudwatch:GetMetricStatistics
              - ce:ListCostCategoryDefinitions
              - s3:GetStorageLens*
              - ec2:Describe*
              - organizations:ListAccounts
              - pricing:GetAttributeValues
              - s3:ListStorageLens*
              - batch:List*
              - cloudwatch:ListMetricStreams
              - cloudfront:ListDistributions
              - purchase-orders:ViewPurchaseOrders
              - ce:GetSavingsPlansCoverage
              - pi:GetResourceMetrics
              - rds:DescribeDBClusters
              - secretsmanager:ListSecrets
              - cur:DescribeReportDefinitions
              - elasticloadbalancing:DescribeInstanceHealth
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeTargetHealth
              - s3:ListAllMyBuckets
              - s3:ListBucketMultipartUploads
              - s3:ListBucketVersions
              - s3:ListMultipartUploadParts
              - s3:ListMultiRegionAccessPoints
              - s3:ListStorageLensConfigurations
              - s3:GetAccessPoint
              - s3:GetBucketLocation
              - s3:GetBucketLogging
              - s3:GetBucketPolicy
              - s3:GetBucketPolicyStatus
              - s3:GetBucketTagging
              - s3:GetBucketVersioning
              - s3:GetEncryptionConfiguration
              - s3:GetIntelligentTieringConfiguration
              - s3:GetLifecycleConfiguration
              - s3:GetMetricsConfiguration
              - s3:GetStorageLensConfiguration
              - s3:GetStorageLensDashboard
              - ebs:ListChangedBlocks
              - ec2:DescribeSnapshotTierStatus
              - ec2:DescribeSnapshots
              - ecr:DescribeImages
              - ecr:DescribeRegistry
              - ecr:DescribeRepositories
              - ecr:ListImages
              - secretsmanager:ListSecrets
            Resource: "*"

          - Effect: Deny
            Action:
              - ce:UpdateNotificationSubscription
              - purchase-orders:Modify*
              - ce:DeleteNotificationSubscription
              - ce:DeleteReport
              - ce:CreateNotificationSubscription
              - cur:PutReportDefinition
              - cur:DeleteReportDefinition
              - cur:ModifyReportDefinition
              - aws-portal:Modify*
              - purchase-orders:Update*
              - s3:GetObject
              - ce:UpdateReport
              - ce:UpdatePreferences
              - purchase-orders:Delete*
              - ce:CreateReport
              - budgets:ModifyBudget
            Resource: "*"
            
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:cloudpouch-audit-user-secret-*
  
  AuditRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cloudpouch-audit-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::658620001254:root
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref AuditPolicy
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
        - arn:aws:iam::aws:policy/job-function/Billing
        - arn:aws:iam::aws:policy/ComputeOptimizerReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSSavingsPlansReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudSearchReadOnlyAccess

  AuditUser:
    Type: AWS::IAM::User
    Properties:
      UserName: cloudpouch-audit-user
      ManagedPolicyArns:
        - !Ref AuditPolicy
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
        - arn:aws:iam::aws:policy/job-function/Billing
        - arn:aws:iam::aws:policy/ComputeOptimizerReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSSavingsPlansReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudSearchReadOnlyAccess

  AuditUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref AuditUser

  AuditUserSecret:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Name: cloudpouch-audit-user-secret
      SecretString: !Sub
        - '{"AccessKeyId":"${AccessKeyId}", 
            "SecretAccessKey":"${SecretAccessKey}"}'
        - AccessKeyId: !Ref AuditUserAccessKey
          SecretAccessKey: !GetAtt AuditUserAccessKey.SecretAccessKey

  EventBridgeRuleNotifyUponCreation:
    Type: "AWS::Events::Rule"
    Properties:
      EventPattern:
        source:
          - "aws.cloudformation"
        detail-type: 
          - "CloudFormation Stack Status Change"
        detail:
          stack-id: 
            - wildcard: !Sub "arn:aws:cloudformation:*:*:stack/${AWS::StackName}*"
          status-details:
            status:
              - "CREATE_COMPLETE"
      State: "ENABLED"
      Targets:
        - Arn: "arn:aws:events:eu-central-1:658620001254:event-bus/cost-audit-client-account-enrolled"
          Id: "TargetEventBus"
          RoleArn: !GetAtt EventBusCrossAccountRole.Arn
          DeadLetterConfig:
            Arn: !GetAtt  EventBridgeRuleDlq.Arn

  EventBridgeRuleDlq:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    Properties:
      QueueName: cloudpouch-notify-dlq
  
  EventBridgeToToSqsPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sqs:SendMessage
          Resource: !GetAtt EventBridgeRuleDlq.Arn
      Queues:
        - Ref: EventBridgeRuleDlq

  EventBusCrossAccountRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "EventBusCrossAccountRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole

  EventBusCrossAccountPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "EventBusCrossAccountPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "CrossAccountPublish"
            Effect: "Allow"
            Action: "events:PutEvents"
            Resource: "arn:aws:events:eu-central-1:658620001254:event-bus/cost-audit-client-account-enrolled"
      Roles:
        - Ref: "EventBusCrossAccountRole"
